print('hello')
library(stringr)
#########################
#start actuall work flow#
#########################
#Set WD to folder with .TXT files
#Get all .TXT
fileName<- list.files(pattern = "*.TXT")
#Create fileName.data list and fileName.note
fileNames.data = list()
fileNames.note = list()
for(i in fileName) {
n = str_locate_all(pattern="DATA", i)
if(length(n[[1]]) > 0) {
fileNames.data <- c(fileNames.data, i)
} else {
fileNames.note <- c(fileNames.note, i)
}
}
#start process to make main csv
#create initial entry into master
#Get file name
fileN <- paste("", fileNames.data[1], sep="")
#Convert box text docs to csv
data.temp <- readChar(fileN, file.info(fileN)$size)
box.temp <- str_locate_all(pattern="_", fileN)
box <- substr(fileN, (box.temp[[1]][1]+1), (box.temp[[1]][2]-1))
data.temp <- substr(data.temp, 11, nchar(data.temp))
print('out')
if(nchar(data.temp) > 20) {
inputSpace <- str_locate_all(pattern = " ", data.temp)
inputR <- str_locate_all(pattern = "\r", data.temp)
j = 30 #index of record
k = 2 #count for time
id <- substr(data.temp, 1, (inputSpace[[1]][1])-1)
date <- substr(data.temp, ((inputSpace[[1]][1])+1), (inputSpace[[1]][1+1])-1)
time <- substr(data.temp, ((inputSpace[[1]][1+1])+1), (inputR[[1]][1])-1)
for(i in 3:(length(inputSpace[[1]]))) {
if((i%%2) == 1) {
id <- c(id, substr(data.temp, j, (inputSpace[[1]][i])-1))
box <- c(box, box)
fileN <- c(fileN, fileN)
j = j + 29
} else {
date <- c(date, (substr(data.temp, ((inputSpace[[1]][i-1])+1), (inputSpace[[1]][i])-1)))
time <- c(time, (substr(data.temp, ((inputSpace[[1]][i])+1), (inputR[[1]][k])-1)))
k = k + 1
}
}
print(length(id))
print(length(box))
print(length(date))
print(length(time))
print(length(fileN))
master <- data.frame(id, box, date, time, fileN)
print(fileN)
} else {
print(c("File too short at: ", box, fileN))
}
#length(fileNames.data)
#Add remaining entries to master
for(i in 2:6) {
#Get file name
fileN <- paste("", fileNames.data[i], sep="")
#Convert box text docs to csv
data.temp <- readChar(fileN, file.info(fileN)$size)
box.temp <- str_locate_all(pattern="_", fileN)
box <- substr(fileN, (box.temp[[1]][1]+1), (box.temp[[1]][2]-1))
data.temp <- substr(data.temp, 11, nchar(data.temp))
if(nchar(data.temp) > 20) {
inputSpace <- str_locate_all(pattern = " ", data.temp)
inputR <- str_locate_all(pattern = "\r", data.temp)
j = 30 #index of record
k = 2 #count for time
id <- substr(data.temp, 1, (inputSpace[[1]][1])-1)
date <- substr(data.temp, ((inputSpace[[1]][1])+1), (inputSpace[[1]][1+1])-1)
time <- substr(data.temp, ((inputSpace[[1]][1+1])+1), (inputR[[1]][1])-1)
for(i in 3:(length(inputSpace[[1]]))) {
if((i%%2) == 1) {
id <- c(id, substr(data.temp, j, (inputSpace[[1]][i])-1))
j = j + 29
} else {
date <- c(date, (substr(data.temp, ((inputSpace[[1]][i-1])+1), ((inputSpace[[1]][i])-1))))
time <- c(time, (substr(data.temp, ((inputSpace[[1]][i])+1), (inputR[[1]][k])-1)))
k = k + 1
}
}
id <- c(master$id, id)
box <- c(master$box, box)
date <- c(master$date, date)
time <- c(master$time, time)
fileN <- c(master$fileN, fileN)
master <- data.frame(id, box, date, time, fileN)
print(fileN)
} else {
print(c("File too short at: ", box, fileN))
}
}
load("~/Rosvall Lab/Tree-Swallow-Network/data/.RData")
setwd("~/Rosvall Lab/RFID-Network/tests/Reads transfered sucessfully/Analyse Reads/10-23-18")
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader) == 1]
View(serverReads)
serverReads = serverReads[which(serverReads$reader == 1)]
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads[,2]
serverReads[2,]
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 1),]
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
View(serverReads)
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 2),]
sdReads = read.table("0006DATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 100),]
sdReads = read.table("TESTDATA", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 100),]
sdReads = read.table("TESTDATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
offset = serverReads$datetime[1]-sdReads$datetime[1]
sdReads$datetime = sdReads$datetime+offset
total = union(serverReads$datetime, sdReads$datetime)
middle = intersect(serverReads$datetime, sdReads$datetime)
onlyServer = setdiff(serverReads$datetime, sdReads$datetime)
onlySD = setdiff(sdReads$datetime, serverReads$datetime)
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 100),]
sdReads = read.table("TESTDATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
# Fix time offset
offset = serverReads$datetime[1]-sdReads$datetime[1]
offset
View(sdReads)
View(serverReads)
sdReads$datetime = sdReads$datetime+offset
total = union(serverReads$datetime, sdReads$datetime)
middle = intersect(serverReads$datetime, sdReads$datetime)
onlyServer = setdiff(serverReads$datetime, sdReads$datetime)
onlySD = setdiff(sdReads$datetime, serverReads$datetime)
onlySD[1]
onlyServer[1]
onlyServer[2]
onlySD[2]
setwd("~/Rosvall Lab/RFID-Network/tests/Reads transfered sucessfully/Analyse Reads/10-23-18-2")
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 100),]
sdReads = read.table("TESTDATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
offset = serverReads$datetime[1]-sdReads$datetime[1]
sdReads$datetime = sdReads$datetime+offset
total = union(serverReads$datetime, sdReads$datetime)
middle = intersect(serverReads$datetime, sdReads$datetime)
onlyServer = setdiff(serverReads$datetime, sdReads$datetime)
onlySD = setdiff(sdReads$datetime, serverReads$datetime)
as.POSIXct(onlySD, format="%Y-%m-%d %H:%M:%S")
as.POSIXct(onlySD, format="%Y-%m-%d %H:%M:%S", origin = "1970-01-01")
as.POSIXct(onlySD, origin = "1970-01-01")
as.POSIXct(onlyServer, origin = "1970-01-01")
setwd("~/Rosvall Lab/RFID-Network/tests/Reads transfered sucessfully/Analyse Reads/10-23-18-3")
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 100),]
sdReads = read.table("TESTDATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour differen
offset = serverReads$datetime[1]-sdReads$datetime[1]
sdReads$datetime = sdReads$datetime+offset
total = union(serverReads$datetime, sdReads$datetime)
middle = intersect(serverReads$datetime, sdReads$datetime)
onlyServer = setdiff(serverReads$datetime, sdReads$datetime)
onlySD = setdiff(sdReads$datetime, serverReads$datetime)
as.POSIXct(onlySD, origin = "1970-01-01")
setwd("~/Rosvall Lab/RFID-Network/tests/Reads transfered sucessfully/Analyse Reads/10-24-18")
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 100),]
sdReads = read.table("TESTDATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
# Fix time offset
offset = serverReads$datetime[1]-sdReads$datetime[1]
sdReads$datetime = sdReads$datetime+offset
total = union(serverReads$datetime, sdReads$datetime)
middle = intersect(serverReads$datetime, sdReads$datetime)
onlyServer = setdiff(serverReads$datetime, sdReads$datetime)
onlySD = setdiff(sdReads$datetime, serverReads$datetime)
as.POSIXct(onlySD, origin = "1970-01-01")
setwd("~/Rosvall Lab/RFID-Network/tests/Reads transfered sucessfully/Analyse Reads/10-24-18-2")
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 100),]
sdReads = read.table("TESTDATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
# Fix time offset
offset = serverReads$datetime[1]-sdReads$datetime[1]
sdReads$datetime = sdReads$datetime+offset
total = union(serverReads$datetime, sdReads$datetime)
middle = intersect(serverReads$datetime, sdReads$datetime)
onlyServer = setdiff(serverReads$datetime, sdReads$datetime)
onlySD = setdiff(sdReads$datetime, serverReads$datetime)
as.POSIXct(onlySD, origin = "1970-01-01")
setwd("~/Rosvall Lab/RFID-Network/tests/Reads transfered sucessfully/Analyse Reads/10-24-18-3")
# Ben Duggan 10/15/18
# Script to look at reads csv and determin if all tags were added as expected
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 100),]
sdReads = read.table("TESTDATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
# Fix time offset
offset = serverReads$datetime[1]-sdReads$datetime[1]
sdReads$datetime = sdReads$datetime+offset
total = union(serverReads$datetime, sdReads$datetime)
middle = intersect(serverReads$datetime, sdReads$datetime)
onlyServer = setdiff(serverReads$datetime, sdReads$datetime)
onlySD = setdiff(sdReads$datetime, serverReads$datetime)
as.POSIXct(onlySD, origin = "1970-01-01")
as.POSIXct(onlyServer, origin = "1970-01-01")
setwd("~/Rosvall Lab/RFID-Network/tests/Reads transfered sucessfully/Analyse Reads/10-24-18-4")
# Ben Duggan 10/15/18
# Script to look at reads csv and determin if all tags were added as expected
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 100),]
sdReads = read.table("TESTDATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
# Fix time offset
offset = serverReads$datetime[1]-sdReads$datetime[1]
sdReads$datetime = sdReads$datetime+offset
total = union(serverReads$datetime, sdReads$datetime)
middle = intersect(serverReads$datetime, sdReads$datetime)
onlyServer = setdiff(serverReads$datetime, sdReads$datetime)
onlySD = setdiff(sdReads$datetime, serverReads$datetime)
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 100),]
sdReads = read.table("TESTDATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
offset = serverReads$datetime[1]-sdReads$datetime[1]
sdReads$datetime = sdReads$datetime+offset
total = union(serverReads$datetime, sdReads$datetime)
offset = serverReads$datetime[2]-sdReads$datetime[1]
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 100),]
sdReads = read.table("TESTDATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
# Fix time offset
offset = serverReads$datetime[2]-sdReads$datetime[1]
sdReads$datetime = sdReads$datetime+offset
total = union(serverReads$datetime, sdReads$datetime)
middle = intersect(serverReads$datetime, sdReads$datetime)
onlyServer = setdiff(serverReads$datetime, sdReads$datetime)
onlySD = setdiff(sdReads$datetime, serverReads$datetime)
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 100),]
sdReads = read.table("0006DATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
# Fix time offset
offset = serverReads$datetime[0]-sdReads$datetime[1]
sdReads$datetime = sdReads$datetime+offset
total = union(serverReads$datetime, sdReads$datetime)
middle = intersect(serverReads$datetime, sdReads$datetime)
onlyServer = setdiff(serverReads$datetime, sdReads$datetime)
onlySD = setdiff(sdReads$datetime, serverReads$datetime)
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 100),]
sdReads = read.table("0006DATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
# Fix time offset
offset = serverReads$datetime[1]-sdReads$datetime[1]
sdReads$datetime = sdReads$datetime+offset
total = union(serverReads$datetime, sdReads$datetime)
middle = intersect(serverReads$datetime, sdReads$datetime)
onlyServer = setdiff(serverReads$datetime, sdReads$datetime)
onlySD = setdiff(sdReads$datetime, serverReads$datetime)
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
sdReads = read.table("0006DATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
offset = serverReads$datetime[1]-sdReads$datetime[1]
sdReads$datetime = sdReads$datetime+offset
total = union(serverReads$datetime, sdReads$datetime)
middle = intersect(serverReads$datetime, sdReads$datetime)
onlyServer = setdiff(serverReads$datetime, sdReads$datetime)
onlySD = setdiff(sdReads$datetime, serverReads$datetime)
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 2),]
sdReads = read.table("0006DATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
#sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 2),]
sdReads = read.table("TESTDATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
#sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
# Fix time offset
offset = serverReads$datetime[2]-sdReads$datetime[1]
sdReads$datetime = sdReads$datetime+offset
total = union(serverReads$datetime, sdReads$datetime)
middle = intersect(serverReads$datetime, sdReads$datetime)
onlyServer = setdiff(serverReads$datetime, sdReads$datetime)
onlySD = setdiff(sdReads$datetime, serverReads$datetime)
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 2),]
sdReads = read.table("TESTDATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
# Fix time offset
offset = serverReads$datetime[2]-sdReads$datetime[1]
sdReads$datetime = sdReads$datetime+offset
total = union(serverReads$datetime, sdReads$datetime)
middle = intersect(serverReads$datetime, sdReads$datetime)
onlyServer = setdiff(serverReads$datetime, sdReads$datetime)
onlySD = setdiff(sdReads$datetime, serverReads$datetime)
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 2),]
sdReads = read.table("TESTDATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
serverReads = read.csv("reads.csv", header=FALSE, col.names=c("rfid", "datetime", "reader", "box", "fieldsite")) #Load CSV from server
serverReads$datetime <- as.POSIXct(serverReads$datetime, format="%Y-%m-%d %H:%M:%S") #Convert datetime from string to date
serverReads = serverReads[which(serverReads$reader == 100),]
sdReads = read.table("TESTDATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
sdReads$datetime = paste(sdReads$date, sdReads$time, sep=" ")
sdReads$datetime <- as.POSIXct(sdReads$datetime, format="%m/%d/%Y %H:%M:%S") #Convert datetime from string to date
sdReads$datetime <- sdReads$datetime - (4 * 60 * 60) # Take time time zone into account (EST 4 hour difference from UTZ)
# Fix time offset
offset = serverReads$datetime[2]-sdReads$datetime[1]
sdReads$datetime = sdReads$datetime+offset
total = union(serverReads$datetime, sdReads$datetime)
middle = intersect(serverReads$datetime, sdReads$datetime)
onlyServer = setdiff(serverReads$datetime, sdReads$datetime)
onlySD = setdiff(sdReads$datetime, serverReads$datetime)
sdReads = read.table("TESTDATA.txt", sep=" ", skip=1, header=FALSE, col.names=c("rfid", "date", "time")) #Load sd card data
onlyServer
